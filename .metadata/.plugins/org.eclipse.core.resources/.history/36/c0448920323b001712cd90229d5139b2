package processAutomator;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Scanner;

public class Tracert {
	static BufferedWriter bw;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		System.out.println("enter admin password");
		String pass = sc.nextLine();

		Process p = null;

		String output = executeCommand("networksetup -setairportpower airport off");
		System.out.println(output);
		output = executeCommand("networksetup -setairportpower airport on");
		System.out.println(output);

		String Output = "";
		BufferedReader reader = null;
		try {
			p = Runtime.getRuntime().exec("sudo killall -HUP mDNSResponder");
			bw = new BufferedWriter(new OutputStreamWriter(p.getOutputStream()));
			bw.write(pass);
			bw.flush();

			bw = new BufferedWriter(new OutputStreamWriter(p.getOutputStream()));

			reader = new BufferedReader(new InputStreamReader(p.getInputStream()));

			String line = "";
			while ((line = reader.readLine()) != null) {
				System.out.println(line);
			}

		} catch (IOException e1) {
			e1.printStackTrace();
		}
		
		Traceroute.printTraceRoute();

	}

	private static String convertStreamToString(InputStream inputStream) throws IOException {
		while (inputStream.available() != 0) {
			System.out.println(inputStream.read());
		}
		return null;
	}

	private static String executeCommand(String command) {
		StringBuffer output = new StringBuffer();

		Process p;
		try {
			p = Runtime.getRuntime().exec(command);
			p.waitFor();
			BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));

			String line = "";
			while ((line = reader.readLine()) != null) {
				output.append(line + "\n");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		return output.toString();

	}

}
